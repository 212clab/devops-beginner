{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "496"
    },
    "items": [
        {
            "metadata": {
                "name": "lab-cluster-control-plane",
                "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                "resourceVersion": "357",
                "creationTimestamp": "2025-10-13T04:35:44Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "lab-cluster-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node-type": "control-plane",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:46Z",
                        "lastTransitionTime": "2025-10-13T04:35:43Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:46Z",
                        "lastTransitionTime": "2025-10-13T04:35:43Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:46Z",
                        "lastTransitionTime": "2025-10-13T04:35:43Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:46Z",
                        "lastTransitionTime": "2025-10-13T04:35:43Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "7ed0688345d94559aaaeeb7dad1856bd",
                    "systemUUID": "7ed0688345d94559aaaeeb7dad1856bd",
                    "bootID": "7368ee6a-5a03-497e-9a37-4443fdc8adfd",
                    "kernelVersion": "6.10.14-linuxkit",
                    "osImage": "Debian GNU/Linux 12 (bookworm)",
                    "containerRuntimeVersion": "containerd://2.1.3",
                    "kubeletVersion": "v1.34.0",
                    "kubeProxyVersion": "",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.6.4-0"
                        ],
                        "sizeBytes": 98207481
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver-arm64:v1.34.0",
                            "registry.k8s.io/kube-apiserver:v1.34.0"
                        ],
                        "sizeBytes": 84813564
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy-arm64:v1.34.0",
                            "registry.k8s.io/kube-proxy:v1.34.0"
                        ],
                        "sizeBytes": 75936457
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager-arm64:v1.34.0",
                            "registry.k8s.io/kube-controller-manager:v1.34.0"
                        ],
                        "sizeBytes": 72623714
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler-arm64:v1.34.0",
                            "registry.k8s.io/kube-scheduler:v1.34.0"
                        ],
                        "sizeBytes": 51586658
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20250512-df8de77b"
                        ],
                        "sizeBytes": 40636774
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.12.1"
                        ],
                        "sizeBytes": 20392204
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20250214-acbabc1a"
                        ],
                        "sizeBytes": 20222523
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20241212-8ac705d0"
                        ],
                        "sizeBytes": 2954522
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.10"
                        ],
                        "sizeBytes": 267933
                    }
                ],
                "runtimeHandlers": [
                    {
                        "name": "runc",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "test-handler",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    }
                ],
                "features": {
                    "supplementalGroupsPolicy": true
                }
            }
        },
        {
            "metadata": {
                "name": "lab-cluster-worker",
                "uid": "1f33e16b-6fbe-4b09-81bd-47a8c14c0f52",
                "resourceVersion": "460",
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "lab-cluster-worker",
                    "kubernetes.io/os": "linux",
                    "node-type": "worker"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-worker",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletNotReady",
                        "message": "[container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized, CSINode is not yet initialized]"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "1a0b4e566ee340c9aa6116f821a7a7f9",
                    "systemUUID": "1a0b4e566ee340c9aa6116f821a7a7f9",
                    "bootID": "7368ee6a-5a03-497e-9a37-4443fdc8adfd",
                    "kernelVersion": "6.10.14-linuxkit",
                    "osImage": "Debian GNU/Linux 12 (bookworm)",
                    "containerRuntimeVersion": "containerd://2.1.3",
                    "kubeletVersion": "v1.34.0",
                    "kubeProxyVersion": "",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.6.4-0"
                        ],
                        "sizeBytes": 98207481
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver-arm64:v1.34.0",
                            "registry.k8s.io/kube-apiserver:v1.34.0"
                        ],
                        "sizeBytes": 84813564
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy-arm64:v1.34.0",
                            "registry.k8s.io/kube-proxy:v1.34.0"
                        ],
                        "sizeBytes": 75936457
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager-arm64:v1.34.0",
                            "registry.k8s.io/kube-controller-manager:v1.34.0"
                        ],
                        "sizeBytes": 72623714
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler-arm64:v1.34.0",
                            "registry.k8s.io/kube-scheduler:v1.34.0"
                        ],
                        "sizeBytes": 51586658
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20250512-df8de77b"
                        ],
                        "sizeBytes": 40636774
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.12.1"
                        ],
                        "sizeBytes": 20392204
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20250214-acbabc1a"
                        ],
                        "sizeBytes": 20222523
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20241212-8ac705d0"
                        ],
                        "sizeBytes": 2954522
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.10"
                        ],
                        "sizeBytes": 267933
                    }
                ],
                "runtimeHandlers": [
                    {
                        "name": "runc",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "test-handler",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    }
                ],
                "features": {
                    "supplementalGroupsPolicy": true
                }
            }
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2",
                "uid": "d1de223a-fbad-4df2-ba4b-81e523e22329",
                "resourceVersion": "486",
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "lab-cluster-worker2",
                    "kubernetes.io/os": "linux",
                    "node-type": "worker"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.2.0/24",
                "podCIDRs": [
                    "10.244.2.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-worker2",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "10",
                    "ephemeral-storage": "474095688Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8025424Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-13T04:35:58Z",
                        "lastTransitionTime": "2025-10-13T04:35:58Z",
                        "reason": "KubeletNotReady",
                        "message": "[container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized, CSINode is not yet initialized]"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.3"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-worker2"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "fcab1c85234848038d99ce207b02cfcb",
                    "systemUUID": "fcab1c85234848038d99ce207b02cfcb",
                    "bootID": "7368ee6a-5a03-497e-9a37-4443fdc8adfd",
                    "kernelVersion": "6.10.14-linuxkit",
                    "osImage": "Debian GNU/Linux 12 (bookworm)",
                    "containerRuntimeVersion": "containerd://2.1.3",
                    "kubeletVersion": "v1.34.0",
                    "kubeProxyVersion": "",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.6.4-0"
                        ],
                        "sizeBytes": 98207481
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver-arm64:v1.34.0",
                            "registry.k8s.io/kube-apiserver:v1.34.0"
                        ],
                        "sizeBytes": 84813564
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy-arm64:v1.34.0",
                            "registry.k8s.io/kube-proxy:v1.34.0"
                        ],
                        "sizeBytes": 75936457
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager-arm64:v1.34.0",
                            "registry.k8s.io/kube-controller-manager:v1.34.0"
                        ],
                        "sizeBytes": 72623714
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler-arm64:v1.34.0",
                            "registry.k8s.io/kube-scheduler:v1.34.0"
                        ],
                        "sizeBytes": 51586658
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20250512-df8de77b"
                        ],
                        "sizeBytes": 40636774
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.12.1"
                        ],
                        "sizeBytes": 20392204
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20250214-acbabc1a"
                        ],
                        "sizeBytes": 20222523
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20241212-8ac705d0"
                        ],
                        "sizeBytes": 2954522
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.10"
                        ],
                        "sizeBytes": 267933
                    }
                ],
                "runtimeHandlers": [
                    {
                        "name": "runc",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    },
                    {
                        "name": "test-handler",
                        "features": {
                            "recursiveReadOnlyMounts": true,
                            "userNamespaces": true
                        }
                    }
                ],
                "features": {
                    "supplementalGroupsPolicy": true
                }
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "496"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-66bc5c9577-lkh2r.186df2f2d019faf8",
                "namespace": "kube-system",
                "uid": "776096b1-0f22-4898-ac4b-855518a85e6c",
                "resourceVersion": "401",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-66bc5c9577-lkh2r",
                "uid": "5c890d1a-b4ec-446e-bfa9-a5e0d8a3d84f",
                "apiVersion": "v1",
                "resourceVersion": "399"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. no new claims to deallocate, preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-66bc5c9577-ql694.186df2f2d058a3fc",
                "namespace": "kube-system",
                "uid": "bdb2f427-7147-40dd-b902-70701adb009e",
                "resourceVersion": "413",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-66bc5c9577-ql694",
                "uid": "838aad00-5035-4a2b-9a67-cded2ada9963",
                "apiVersion": "v1",
                "resourceVersion": "404"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. no new claims to deallocate, preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-66bc5c9577.186df2f2d013b6a3",
                "namespace": "kube-system",
                "uid": "1ca412d2-e96e-4fb3-85b8-ecd462fdcbdf",
                "resourceVersion": "408",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-66bc5c9577",
                "uid": "73476c8f-a22b-4044-9f45-ad2fc6705a5b",
                "apiVersion": "apps/v1",
                "resourceVersion": "359"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-66bc5c9577-lkh2r",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-66bc5c9577.186df2f2d0543ac0",
                "namespace": "kube-system",
                "uid": "2ad9bfd5-14a8-49f8-ad12-ea6b8681810a",
                "resourceVersion": "412",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-66bc5c9577",
                "uid": "73476c8f-a22b-4044-9f45-ad2fc6705a5b",
                "apiVersion": "apps/v1",
                "resourceVersion": "359"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-66bc5c9577-ql694",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.186df2f2b2835af6",
                "namespace": "kube-system",
                "uid": "7adf00a2-ea61-47d6-9d5f-027a66c50872",
                "resourceVersion": "361",
                "creationTimestamp": "2025-10-13T04:35:53Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "cc5951c1-43f0-4c5d-a2cc-e0b06b5e59dd",
                "apiVersion": "apps/v1",
                "resourceVersion": "275"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-66bc5c9577 from 0 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:53Z",
            "lastTimestamp": "2025-10-13T04:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-lab-cluster-control-plane.186df2f01eb683db",
                "namespace": "kube-system",
                "uid": "2abdc213-94aa-4815-b03b-d0b1fe80ee5f",
                "resourceVersion": "94",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-lab-cluster-control-plane",
                "uid": "7a0bc9b5929611b37c9780cedc7b1793",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/etcd:3.6.4-0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "etcd-lab-cluster-control-plane.186df2f05063eb4b",
                "namespace": "kube-system",
                "uid": "21d09879-ce4d-45a3-b5df-51ad321a178f",
                "resourceVersion": "103",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-lab-cluster-control-plane",
                "uid": "7a0bc9b5929611b37c9780cedc7b1793",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Created",
            "message": "Created container: etcd",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:43Z",
            "lastTimestamp": "2025-10-13T04:35:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "etcd-lab-cluster-control-plane.186df2f05311a601",
                "namespace": "kube-system",
                "uid": "d7423bcf-b051-4c39-b1ca-b164ee10f4fb",
                "resourceVersion": "104",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-lab-cluster-control-plane",
                "uid": "7a0bc9b5929611b37c9780cedc7b1793",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Started",
            "message": "Started container etcd",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:43Z",
            "lastTimestamp": "2025-10-13T04:35:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-h2z44.186df2f2c7974c4b",
                "namespace": "kube-system",
                "uid": "9b4d008a-2791-4b5c-9a7f-5947751282f3",
                "resourceVersion": "394",
                "creationTimestamp": "2025-10-13T04:35:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2z44",
                "uid": "27cb1469-56e8-4bc9-ae61-ad5e56903787",
                "apiVersion": "v1",
                "resourceVersion": "387"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-h2z44 to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:53Z",
            "lastTimestamp": "2025-10-13T04:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-h2z44.186df2f2e28ffff8",
                "namespace": "kube-system",
                "uid": "7486f46e-430e-4c30-afe3-16dad8fea357",
                "resourceVersion": "420",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2z44",
                "uid": "27cb1469-56e8-4bc9-ae61-ad5e56903787",
                "apiVersion": "v1",
                "resourceVersion": "390",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20250512-df8de77b\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-h2z44.186df2f2f6d2ed00",
                "namespace": "kube-system",
                "uid": "e8e9f0d5-542f-4d76-bb9d-2c88c354b28f",
                "resourceVersion": "423",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2z44",
                "uid": "27cb1469-56e8-4bc9-ae61-ad5e56903787",
                "apiVersion": "v1",
                "resourceVersion": "390",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container: kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-h2z44.186df2f308a0c22d",
                "namespace": "kube-system",
                "uid": "20ce7749-d208-44c9-9685-4814a1017677",
                "resourceVersion": "427",
                "creationTimestamp": "2025-10-13T04:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2z44",
                "uid": "27cb1469-56e8-4bc9-ae61-ad5e56903787",
                "apiVersion": "v1",
                "resourceVersion": "390",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:55Z",
            "lastTimestamp": "2025-10-13T04:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-n7pxq.186df2f3deae0453",
                "namespace": "kube-system",
                "uid": "b4ba68fb-635a-4665-aea6-5be22aced8ac",
                "resourceVersion": "463",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-n7pxq",
                "uid": "6bbb733d-3bf2-4f20-88ff-2838c285dfff",
                "apiVersion": "v1",
                "resourceVersion": "454"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-n7pxq to lab-cluster-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-z47wr.186df2f3eb37d58b",
                "namespace": "kube-system",
                "uid": "beb805d5-1e19-494d-9be5-1e780b53202f",
                "resourceVersion": "495",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-z47wr",
                "uid": "ba93e75b-f473-4c07-bbc7-b8679047499e",
                "apiVersion": "v1",
                "resourceVersion": "485"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-z47wr to lab-cluster-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186df2f2c769cbb1",
                "namespace": "kube-system",
                "uid": "848fadc0-d345-4c65-a481-6a4276e59bff",
                "resourceVersion": "393",
                "creationTimestamp": "2025-10-13T04:35:53Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                "apiVersion": "apps/v1",
                "resourceVersion": "294"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-h2z44",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:53Z",
            "lastTimestamp": "2025-10-13T04:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186df2f3de69aaee",
                "namespace": "kube-system",
                "uid": "939c9462-84f9-448a-b266-72ed66661a3e",
                "resourceVersion": "457",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                "apiVersion": "apps/v1",
                "resourceVersion": "431"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-n7pxq",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186df2f3eb02f97b",
                "namespace": "kube-system",
                "uid": "f15c6a35-f3ca-48bb-8070-a235c978ef86",
                "resourceVersion": "493",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                "apiVersion": "apps/v1",
                "resourceVersion": "458"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-z47wr",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-lab-cluster-control-plane.186df2f01ef0f906",
                "namespace": "kube-system",
                "uid": "2cfabee4-8c19-49a5-bfec-c1c7765dbd38",
                "resourceVersion": "95",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-lab-cluster-control-plane",
                "uid": "a9f109932ce9eb5c0593f79de0e618ff",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-apiserver:v1.34.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-apiserver-lab-cluster-control-plane.186df2f02fbf6476",
                "namespace": "kube-system",
                "uid": "45cbc65d-0413-4e64-8b6e-b334130ecd1d",
                "resourceVersion": "99",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-lab-cluster-control-plane",
                "uid": "a9f109932ce9eb5c0593f79de0e618ff",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Created",
            "message": "Created container: kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-apiserver-lab-cluster-control-plane.186df2f0337b87f2",
                "namespace": "kube-system",
                "uid": "1a5e8ec0-0b11-4c42-98da-892609d6527a",
                "resourceVersion": "102",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-lab-cluster-control-plane",
                "uid": "a9f109932ce9eb5c0593f79de0e618ff",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Started",
            "message": "Started container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-lab-cluster-control-plane.186df2f01e84b970",
                "namespace": "kube-system",
                "uid": "4aadede7-b99d-4e69-b4d7-842b25fd08cc",
                "resourceVersion": "93",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-lab-cluster-control-plane",
                "uid": "4623483d434ce6046cfda5da15675b1c",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-controller-manager:v1.34.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-lab-cluster-control-plane.186df2f02f71ef85",
                "namespace": "kube-system",
                "uid": "64cfa195-12d6-4422-89d7-b4be7b882c34",
                "resourceVersion": "98",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-lab-cluster-control-plane",
                "uid": "4623483d434ce6046cfda5da15675b1c",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Created",
            "message": "Created container: kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-lab-cluster-control-plane.186df2f03317e545",
                "namespace": "kube-system",
                "uid": "2173dbb2-8479-4c36-a36d-ef3d6335e753",
                "resourceVersion": "101",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-lab-cluster-control-plane",
                "uid": "4623483d434ce6046cfda5da15675b1c",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Started",
            "message": "Started container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-controller-manager.186df2f15ae94dcc",
                "namespace": "kube-system",
                "uid": "60aa8f50-c5a3-4f25-b416-cdfa1ec0f4a9",
                "resourceVersion": "297",
                "creationTimestamp": "2025-10-13T04:35:47Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "92f397b2-c7c4-43ee-9a20-694275138fdb",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "295"
            },
            "reason": "LeaderElection",
            "message": "lab-cluster-control-plane_346de7ef-9683-490d-9b67-14c08f0e8771 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2025-10-13T04:35:47Z",
            "lastTimestamp": "2025-10-13T04:35:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kube-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cnxbp.186df2f3eb364815",
                "namespace": "kube-system",
                "uid": "1ae9f9c4-b605-4059-b633-51816cd93097",
                "resourceVersion": "494",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cnxbp",
                "uid": "ae92560d-9e66-4649-b6b3-d9673874d05b",
                "apiVersion": "v1",
                "resourceVersion": "484"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-cnxbp to lab-cluster-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-h4vb8.186df2f3decfaefa",
                "namespace": "kube-system",
                "uid": "0d69e0c6-7ac7-407f-8a98-a1acfbda7449",
                "resourceVersion": "465",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-h4vb8",
                "uid": "d06d7045-c836-44cd-a019-cc72faed2023",
                "apiVersion": "v1",
                "resourceVersion": "455"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-h4vb8 to lab-cluster-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-h9n2b.186df2f2c7a96809",
                "namespace": "kube-system",
                "uid": "25169c6d-9a14-444d-9a44-3c3b5325a4ae",
                "resourceVersion": "395",
                "creationTimestamp": "2025-10-13T04:35:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-h9n2b",
                "uid": "14fbffcd-64ca-45bb-b442-4cde319ee75c",
                "apiVersion": "v1",
                "resourceVersion": "386"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-h9n2b to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:53Z",
            "lastTimestamp": "2025-10-13T04:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-h9n2b.186df2f2dfb73073",
                "namespace": "kube-system",
                "uid": "e81897a6-fe6d-49a2-92de-7835bed2a9fa",
                "resourceVersion": "418",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-h9n2b",
                "uid": "14fbffcd-64ca-45bb-b442-4cde319ee75c",
                "apiVersion": "v1",
                "resourceVersion": "391",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.34.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy-h9n2b.186df2f2ea9b8282",
                "namespace": "kube-system",
                "uid": "b82587a9-c992-4114-abfa-522a8a69b953",
                "resourceVersion": "421",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-h9n2b",
                "uid": "14fbffcd-64ca-45bb-b442-4cde319ee75c",
                "apiVersion": "v1",
                "resourceVersion": "391",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container: kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy-h9n2b.186df2f2edd98db8",
                "namespace": "kube-system",
                "uid": "b75fb389-bebe-4801-87fc-5b549d94e11d",
                "resourceVersion": "422",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-h9n2b",
                "uid": "14fbffcd-64ca-45bb-b442-4cde319ee75c",
                "apiVersion": "v1",
                "resourceVersion": "391",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:54Z",
            "lastTimestamp": "2025-10-13T04:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy.186df2f2c75c783c",
                "namespace": "kube-system",
                "uid": "f6e52947-eb80-4a4b-ac3b-96ad6455603c",
                "resourceVersion": "388",
                "creationTimestamp": "2025-10-13T04:35:53Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                "apiVersion": "apps/v1",
                "resourceVersion": "279"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-h9n2b",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:53Z",
            "lastTimestamp": "2025-10-13T04:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.186df2f3de7cdb34",
                "namespace": "kube-system",
                "uid": "7a275345-73f7-4d88-ac04-5f413745430c",
                "resourceVersion": "464",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                "apiVersion": "apps/v1",
                "resourceVersion": "429"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-h4vb8",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.186df2f3eb01a191",
                "namespace": "kube-system",
                "uid": "9cbac6b4-8e69-4b08-a333-28d3b97790a8",
                "resourceVersion": "490",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                "apiVersion": "apps/v1",
                "resourceVersion": "461"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-cnxbp",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-lab-cluster-control-plane.186df2f01f341ae6",
                "namespace": "kube-system",
                "uid": "e07e357f-19c0-4af3-baa2-2249404c550c",
                "resourceVersion": "96",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-lab-cluster-control-plane",
                "uid": "38bc3740903a7e6e188a5b38d680d7b4",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-scheduler:v1.34.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-scheduler-lab-cluster-control-plane.186df2f02e20fed9",
                "namespace": "kube-system",
                "uid": "a1243a15-34ff-4671-8007-23ff3142900f",
                "resourceVersion": "97",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-lab-cluster-control-plane",
                "uid": "38bc3740903a7e6e188a5b38d680d7b4",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Created",
            "message": "Created container: kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-scheduler-lab-cluster-control-plane.186df2f03266cf20",
                "namespace": "kube-system",
                "uid": "7a1488a1-94c1-4450-a4ac-7d1700621bef",
                "resourceVersion": "100",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-lab-cluster-control-plane",
                "uid": "38bc3740903a7e6e188a5b38d680d7b4",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Started",
            "message": "Started container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "kube-scheduler.186df2f190f90086",
                "namespace": "kube-system",
                "uid": "6ace6581-7e5c-487b-b1cb-7df74363703e",
                "resourceVersion": "320",
                "creationTimestamp": "2025-10-13T04:35:48Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "14c481c3-e249-4099-a648-6b2c4d30e867",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "319"
            },
            "reason": "LeaderElection",
            "message": "lab-cluster-control-plane_cca0d485-823d-47fb-9ccf-82654f4444ca became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-13T04:35:48Z",
            "lastTimestamp": "2025-10-13T04:35:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "496"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "496"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "2aee5545-5e95-4e03-8c38-886c9785f982",
                "resourceVersion": "277",
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "497"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                "resourceVersion": "491",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:47Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "nri-plugin",
                                "hostPath": {
                                    "path": "/var/run/nri",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20250512-df8de77b",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "lab-cluster-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "nri-plugin",
                                        "mountPath": "/var/run/nri"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 1,
                "numberUnavailable": 2
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                "resourceVersion": "489",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.34.0",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 1,
                "numberUnavailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "cc5951c1-43f0-4c5d-a2cc-e0b06b5e59dd",
                "resourceVersion": "417",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.12.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "liveness-probe",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "readiness-probe",
                                        "containerPort": 8181,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": "liveness-probe",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "readiness-probe",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "unavailableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2025-10-13T04:35:53Z",
                        "lastTransitionTime": "2025-10-13T04:35:53Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-10-13T04:35:54Z",
                        "lastTransitionTime": "2025-10-13T04:35:53Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"coredns-66bc5c9577\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-66bc5c9577",
                "namespace": "kube-system",
                "uid": "73476c8f-a22b-4044-9f45-ad2fc6705a5b",
                "resourceVersion": "416",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:53Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "66bc5c9577"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "cc5951c1-43f0-4c5d-a2cc-e0b06b5e59dd",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "66bc5c9577"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "66bc5c9577"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.12.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "liveness-probe",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "readiness-probe",
                                        "containerPort": 8181,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": "liveness-probe",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "readiness-probe",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-66bc5c9577-lkh2r",
                "generateName": "coredns-66bc5c9577-",
                "namespace": "kube-system",
                "uid": "5c890d1a-b4ec-446e-bfa9-a5e0d8a3d84f",
                "resourceVersion": "407",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:54Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "66bc5c9577"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-66bc5c9577",
                        "uid": "73476c8f-a22b-4044-9f45-ad2fc6705a5b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-nct2k",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.12.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            },
                            {
                                "name": "liveness-probe",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "name": "readiness-probe",
                                "containerPort": 8181,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-nct2k",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": "liveness-probe",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": "readiness-probe",
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:54Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. no new claims to deallocate, preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-66bc5c9577-ql694",
                "generateName": "coredns-66bc5c9577-",
                "namespace": "kube-system",
                "uid": "838aad00-5035-4a2b-9a67-cded2ada9963",
                "resourceVersion": "410",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:54Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "66bc5c9577"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-66bc5c9577",
                        "uid": "73476c8f-a22b-4044-9f45-ad2fc6705a5b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-97x2k",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.12.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            },
                            {
                                "name": "liveness-probe",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "name": "readiness-probe",
                                "containerPort": 8181,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-97x2k",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": "liveness-probe",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": "readiness-probe",
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:54Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. no new claims to deallocate, preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "a8fcf2ea-e071-4b4a-9338-eec475934b4e",
                "resourceVersion": "433",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:45Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.19.0.4:2379",
                    "kubernetes.io/config.hash": "7a0bc9b5929611b37c9780cedc7b1793",
                    "kubernetes.io/config.mirror": "7a0bc9b5929611b37c9780cedc7b1793",
                    "kubernetes.io/config.seen": "2025-10-13T04:35:41.915594128Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.6.4-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.19.0.4:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--feature-gates=InitialCorruptCheck=true",
                            "--initial-advertise-peer-urls=https://172.19.0.4:2380",
                            "--initial-cluster=lab-cluster-control-plane=https://172.19.0.4:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.19.0.4:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.19.0.4:2380",
                            "--name=lab-cluster-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--watch-progress-notify-interval=5s"
                        ],
                        "ports": [
                            {
                                "name": "probe-port",
                                "hostPort": 2381,
                                "containerPort": 2381,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:46Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:43Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.6.4-0",
                        "imageID": "sha256:a1894772a478e07c67a56e8bf32335fdbe1dd4ec96976a5987083164bd00bc0e",
                        "containerID": "containerd://b37139fb89f7e633e03077ecaedc426f9275d8f3971ba186d7cbcc141766f7dd",
                        "started": true,
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        },
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-h2z44",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "27cb1469-56e8-4bc9-ae61-ad5e56903787",
                "resourceVersion": "430",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:53Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "5c6c7cdf",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "nri-plugin",
                        "hostPath": {
                            "path": "/var/run/nri",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-nh8dm",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20250512-df8de77b",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "nri-plugin",
                                "mountPath": "/var/run/nri"
                            },
                            {
                                "name": "kube-api-access-nh8dm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:53Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:53Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:54Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20250512-df8de77b",
                        "imageID": "sha256:b1a8c6f707935fd5f346ce5846d21ff8dd65e14c15406a14dbd16b9b897b9b4c",
                        "containerID": "containerd://e8ab239c7a1f9d491d27c60c702109218443bd831155db75018d80f802caeae4",
                        "started": true,
                        "allocatedResources": {
                            "cpu": "100m",
                            "memory": "50Mi"
                        },
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "mountPath": "/lib/modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "nri-plugin",
                                "mountPath": "/var/run/nri"
                            },
                            {
                                "name": "kube-api-access-nh8dm",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ],
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-n7pxq",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "6bbb733d-3bf2-4f20-88ff-2838c285dfff",
                "resourceVersion": "456",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "5c6c7cdf",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "nri-plugin",
                        "hostPath": {
                            "path": "/var/run/nri",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-wpztz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20250512-df8de77b",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "nri-plugin",
                                "mountPath": "/var/run/nri"
                            },
                            {
                                "name": "kube-api-access-wpztz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:58Z"
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-z47wr",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "ba93e75b-f473-4c07-bbc7-b8679047499e",
                "resourceVersion": "488",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "5c6c7cdf",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "20dcbb52-e74f-42f4-8281-ea118cc15d3a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "nri-plugin",
                        "hostPath": {
                            "path": "/var/run/nri",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-td5ks",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20250512-df8de77b",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "nri-plugin",
                                "mountPath": "/var/run/nri"
                            },
                            {
                                "name": "kube-api-access-td5ks",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:58Z"
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "8bdf0969-84cf-4478-8983-0484975be44c",
                "resourceVersion": "419",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.19.0.4:6443",
                    "kubernetes.io/config.hash": "a9f109932ce9eb5c0593f79de0e618ff",
                    "kubernetes.io/config.mirror": "a9f109932ce9eb5c0593f79de0e618ff",
                    "kubernetes.io/config.seen": "2025-10-13T04:35:46.319987256Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.34.0",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.19.0.4",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "ports": [
                            {
                                "name": "probe-port",
                                "hostPort": 6443,
                                "containerPort": 6443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "probe-port",
                                "host": "172.19.0.4",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "probe-port",
                                "host": "172.19.0.4",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "probe-port",
                                "host": "172.19.0.4",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:46Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:42Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver-arm64:v1.34.0",
                        "imageID": "sha256:d291939e994064911484215449d0ab96c535b02adc4fc5d0ad4e438cf71465be",
                        "containerID": "containerd://aa013262e63b8598e44eb79ef2ef278643d200432cd4f00bf195522a32020a39",
                        "started": true,
                        "allocatedResources": {
                            "cpu": "250m"
                        },
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "fb8ed05d-7619-480f-833c-02a19133d0b7",
                "resourceVersion": "439",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "4623483d434ce6046cfda5da15675b1c",
                    "kubernetes.io/config.mirror": "4623483d434ce6046cfda5da15675b1c",
                    "kubernetes.io/config.seen": "2025-10-13T04:35:46.319988506Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.34.0",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=lab-cluster",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "ports": [
                            {
                                "name": "probe-port",
                                "hostPort": 10257,
                                "containerPort": 10257,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:57Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:57Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:46Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:42Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager-arm64:v1.34.0",
                        "imageID": "sha256:996be7e86d9b3a549d718de63713d9fea9db1f45ac44863a6770292d7b463570",
                        "containerID": "containerd://7718ed69a419a04b0a99b6707f900c0c94969da80f0d480333c1026fbd4a688c",
                        "started": true,
                        "allocatedResources": {
                            "cpu": "200m"
                        },
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-cnxbp",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "ae92560d-9e66-4649-b6b3-d9673874d05b",
                "resourceVersion": "487",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "controller-revision-hash": "6f475c7966",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-f4xwz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.34.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-f4xwz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:58Z"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-h4vb8",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "d06d7045-c836-44cd-a019-cc72faed2023",
                "resourceVersion": "462",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:58Z",
                "labels": {
                    "controller-revision-hash": "6f475c7966",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-cf42t",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.34.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-cf42t",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:58Z"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-h9n2b",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "14fbffcd-64ca-45bb-b442-4cde319ee75c",
                "resourceVersion": "428",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:53Z",
                "labels": {
                    "controller-revision-hash": "6f475c7966",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "05d12103-7a07-4c8e-8de7-9813e3c80f00",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-8fqn9",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.34.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-8fqn9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:53Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:53Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:54Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy-arm64:v1.34.0",
                        "imageID": "sha256:6fc32d66c141152245438e6512df788cb52d64a1617e33561950b0e7a4675abf",
                        "containerID": "containerd://36a7aa3c3af73583647d1744ce6fc1c12fc71106be5c07f1a7f53ee4fd385f82",
                        "started": true,
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "mountPath": "/lib/modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-8fqn9",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ],
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "f73efe87-a840-459b-b0d2-03c6f6fa3697",
                "resourceVersion": "498",
                "generation": 1,
                "creationTimestamp": "2025-10-13T04:35:46Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "38bc3740903a7e6e188a5b38d680d7b4",
                    "kubernetes.io/config.mirror": "38bc3740903a7e6e188a5b38d680d7b4",
                    "kubernetes.io/config.seen": "2025-10-13T04:35:46.319989672Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.34.0",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "ports": [
                            {
                                "name": "probe-port",
                                "hostPort": 10259,
                                "containerPort": 10259,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "probe-port",
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:59Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:59Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-13T04:35:46Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "hostIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2025-10-13T04:35:46Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-13T04:35:42Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler-arm64:v1.34.0",
                        "imageID": "sha256:a25f5ef9c34c37c649f3b4f9631a169221ac2d6f41d9767c7588cd355f76f9ee",
                        "containerID": "containerd://62f9e0255aa70555810b56bcd3e3c013e21804871ad5f754ecd7c52ddc840b04",
                        "started": true,
                        "allocatedResources": {
                            "cpu": "100m"
                        },
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "user": {
                            "linux": {
                                "uid": 0,
                                "gid": 0,
                                "supplementalGroups": [
                                    0
                                ]
                            }
                        }
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-66bc5c9577-lkh2r ====
==== END logs for container coredns of pod kube-system/coredns-66bc5c9577-lkh2r ====
==== START logs for container coredns of pod kube-system/coredns-66bc5c9577-ql694 ====
==== END logs for container coredns of pod kube-system/coredns-66bc5c9577-ql694 ====
==== START logs for container etcd of pod kube-system/etcd-lab-cluster-control-plane ====
{"level":"warn","ts":"2025-10-13T04:35:43.380565Z","caller":"embed/config.go:1209","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"warn","ts":"2025-10-13T04:35:43.380606Z","caller":"etcdmain/config.go:270","msg":"--snapshot-count is deprecated in 3.6 and will be decommissioned in 3.7."}
{"level":"info","ts":"2025-10-13T04:35:43.380612Z","caller":"etcdmain/etcd.go:64","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.19.0.4:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--feature-gates=InitialCorruptCheck=true","--initial-advertise-peer-urls=https://172.19.0.4:2380","--initial-cluster=lab-cluster-control-plane=https://172.19.0.4:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.19.0.4:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.19.0.4:2380","--name=lab-cluster-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--watch-progress-notify-interval=5s"]}
{"level":"info","ts":"2025-10-13T04:35:43.380635Z","caller":"etcdmain/etcd.go:124","msg":"Initialize and start etcd server","data-dir":"/var/lib/etcd","dir-type":"empty"}
{"level":"warn","ts":"2025-10-13T04:35:43.380643Z","caller":"embed/config.go:1209","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-10-13T04:35:43.380652Z","caller":"embed/etcd.go:138","msg":"configuring peer listeners","listen-peer-urls":["https://172.19.0.4:2380"]}
{"level":"info","ts":"2025-10-13T04:35:43.380660Z","caller":"embed/etcd.go:544","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-10-13T04:35:43.381030Z","caller":"embed/etcd.go:146","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.4:2379"]}
{"level":"info","ts":"2025-10-13T04:35:43.381070Z","caller":"embed/etcd.go:323","msg":"starting an etcd server","etcd-version":"3.6.4","git-sha":"5400cdc39","go-version":"go1.23.11","go-os":"linux","go-arch":"arm64","max-cpu-set":10,"max-cpu-available":10,"member-initialized":false,"name":"lab-cluster-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.19.0.4:2380"],"listen-peer-urls":["https://172.19.0.4:2380"],"advertise-client-urls":["https://172.19.0.4:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.4:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"experimental-local-address":"","cors":["*"],"host-whitelist":["*"],"initial-cluster":"lab-cluster-control-plane=https://172.19.0.4:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"feature-gates":"InitialCorruptCheck=true","initial-corrupt-check":false,"corrupt-check-time-interval":"0s","compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","discovery-token":"","discovery-endpoints":"","discovery-dial-timeout":"2s","discovery-request-timeout":"5s","discovery-keepalive-time":"2s","discovery-keepalive-timeout":"6s","discovery-insecure-transport":true,"discovery-insecure-skip-tls-verify":false,"discovery-cert":"","discovery-key":"","discovery-cacert":"","discovery-user":"","downgrade-check-interval":"5s","max-learners":1,"v2-deprecation":"write-only"}
{"level":"info","ts":"2025-10-13T04:35:43.382621Z","logger":"bbolt","caller":"backend/backend.go:203","msg":"Opening db file (/var/lib/etcd/member/snap/db) with mode -rw------- and with options: {Timeout: 0s, NoGrowSync: false, NoFreelistSync: true, PreLoadFreelist: false, FreelistType: hashmap, ReadOnly: false, MmapFlags: 8000, InitialMmapSize: 10737418240, PageSize: 0, NoSync: false, OpenFile: 0x0, Mlock: false, Logger: 0x400015e1d8}"}
{"level":"info","ts":"2025-10-13T04:35:43.386643Z","logger":"bbolt","caller":"bbolt@v1.4.2/db.go:321","msg":"Opening bbolt db (/var/lib/etcd/member/snap/db) successfully"}
{"level":"info","ts":"2025-10-13T04:35:43.386673Z","caller":"storage/backend.go:80","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"4.119375ms"}
{"level":"info","ts":"2025-10-13T04:35:43.386685Z","caller":"etcdserver/bootstrap.go:220","msg":"restore consistentIndex","index":0}
{"level":"info","ts":"2025-10-13T04:35:43.386694Z","caller":"etcdserver/bootstrap.go:94","msg":"bootstrapping cluster"}
{"level":"info","ts":"2025-10-13T04:35:43.386712Z","caller":"etcdserver/bootstrap.go:101","msg":"bootstrapping storage"}
{"level":"info","ts":"2025-10-13T04:35:43.393037Z","caller":"etcdserver/bootstrap.go:109","msg":"bootstrapping raft"}
{"level":"info","ts":"2025-10-13T04:35:43.393070Z","caller":"etcdserver/bootstrap.go:499","msg":"starting local member","local-member-id":"4e3c161948c74816","cluster-id":"d9e5a8d95c1978fd"}
{"level":"info","ts":"2025-10-13T04:35:43.393087Z","caller":"etcdserver/server.go:312","msg":"bootstrap successfully"}
{"level":"info","ts":"2025-10-13T04:35:43.393132Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1981","msg":"4e3c161948c74816 switched to configuration voters=()"}
{"level":"info","ts":"2025-10-13T04:35:43.393158Z","logger":"raft","caller":"v3@v3.6.0/raft.go:897","msg":"4e3c161948c74816 became follower at term 0"}
{"level":"info","ts":"2025-10-13T04:35:43.393166Z","logger":"raft","caller":"v3@v3.6.0/raft.go:493","msg":"newRaft 4e3c161948c74816 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-10-13T04:35:43.393170Z","logger":"raft","caller":"v3@v3.6.0/raft.go:897","msg":"4e3c161948c74816 became follower at term 1"}
{"level":"info","ts":"2025-10-13T04:35:43.393197Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1981","msg":"4e3c161948c74816 switched to configuration voters=(5637405131412031510)"}
{"level":"warn","ts":"2025-10-13T04:35:43.399453Z","caller":"auth/store.go:1135","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-10-13T04:35:43.400547Z","caller":"mvcc/kvstore.go:408","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-10-13T04:35:43.404354Z","caller":"storage/quota.go:93","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-10-13T04:35:43.404491Z","caller":"etcdserver/server.go:598","msg":"starting etcd server","local-member-id":"4e3c161948c74816","local-server-version":"3.6.4","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-10-13T04:35:43.404562Z","caller":"etcdserver/server.go:483","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"4e3c161948c74816","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-10-13T04:35:43.404579Z","caller":"embed/etcd.go:640","msg":"serving peer traffic","address":"172.19.0.4:2380"}
{"level":"info","ts":"2025-10-13T04:35:43.404583Z","caller":"embed/etcd.go:611","msg":"cmux::serve","address":"172.19.0.4:2380"}
{"level":"info","ts":"2025-10-13T04:35:43.404567Z","caller":"fileutil/purge.go:49","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-13T04:35:43.404592Z","caller":"fileutil/purge.go:49","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-13T04:35:43.404598Z","caller":"fileutil/purge.go:49","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-13T04:35:43.404566Z","caller":"embed/etcd.go:766","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-10-13T04:35:43.404677Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1981","msg":"4e3c161948c74816 switched to configuration voters=(5637405131412031510)"}
{"level":"info","ts":"2025-10-13T04:35:43.404723Z","caller":"membership/cluster.go:424","msg":"added member","cluster-id":"d9e5a8d95c1978fd","local-member-id":"4e3c161948c74816","added-peer-id":"4e3c161948c74816","added-peer-peer-urls":["https://172.19.0.4:2380"],"added-peer-is-learner":false}
{"level":"info","ts":"2025-10-13T04:35:43.404777Z","caller":"embed/etcd.go:292","msg":"now serving peer/client/metrics","local-member-id":"4e3c161948c74816","initial-advertise-peer-urls":["https://172.19.0.4:2380"],"listen-peer-urls":["https://172.19.0.4:2380"],"advertise-client-urls":["https://172.19.0.4:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.4:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-10-13T04:35:43.404796Z","caller":"embed/etcd.go:890","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-10-13T04:35:43.797778Z","logger":"raft","caller":"v3@v3.6.0/raft.go:988","msg":"4e3c161948c74816 is starting a new election at term 1"}
{"level":"info","ts":"2025-10-13T04:35:43.797851Z","logger":"raft","caller":"v3@v3.6.0/raft.go:930","msg":"4e3c161948c74816 became pre-candidate at term 1"}
{"level":"info","ts":"2025-10-13T04:35:43.797951Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1077","msg":"4e3c161948c74816 received MsgPreVoteResp from 4e3c161948c74816 at term 1"}
{"level":"info","ts":"2025-10-13T04:35:43.797972Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1693","msg":"4e3c161948c74816 has received 1 MsgPreVoteResp votes and 0 vote rejections"}
{"level":"info","ts":"2025-10-13T04:35:43.797989Z","logger":"raft","caller":"v3@v3.6.0/raft.go:912","msg":"4e3c161948c74816 became candidate at term 2"}
{"level":"info","ts":"2025-10-13T04:35:43.798511Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1077","msg":"4e3c161948c74816 received MsgVoteResp from 4e3c161948c74816 at term 2"}
{"level":"info","ts":"2025-10-13T04:35:43.798547Z","logger":"raft","caller":"v3@v3.6.0/raft.go:1693","msg":"4e3c161948c74816 has received 1 MsgVoteResp votes and 0 vote rejections"}
{"level":"info","ts":"2025-10-13T04:35:43.798564Z","logger":"raft","caller":"v3@v3.6.0/raft.go:970","msg":"4e3c161948c74816 became leader at term 2"}
{"level":"info","ts":"2025-10-13T04:35:43.798571Z","logger":"raft","caller":"v3@v3.6.0/node.go:370","msg":"raft.node: 4e3c161948c74816 elected leader 4e3c161948c74816 at term 2"}
{"level":"info","ts":"2025-10-13T04:35:43.799111Z","caller":"etcdserver/server.go:1804","msg":"published local member to cluster through raft","local-member-id":"4e3c161948c74816","local-member-attributes":"{Name:lab-cluster-control-plane ClientURLs:[https://172.19.0.4:2379]}","cluster-id":"d9e5a8d95c1978fd","publish-timeout":"7s"}
{"level":"info","ts":"2025-10-13T04:35:43.799135Z","caller":"embed/serve.go:138","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-10-13T04:35:43.799222Z","caller":"embed/serve.go:138","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-10-13T04:35:43.799229Z","caller":"etcdserver/server.go:2404","msg":"setting up initial cluster version using v3 API","cluster-version":"3.6"}
{"level":"info","ts":"2025-10-13T04:35:43.799407Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-10-13T04:35:43.799426Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-10-13T04:35:43.799799Z","caller":"membership/cluster.go:682","msg":"set initial cluster version","cluster-id":"d9e5a8d95c1978fd","local-member-id":"4e3c161948c74816","cluster-version":"3.6"}
{"level":"info","ts":"2025-10-13T04:35:43.799869Z","caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.6"}
{"level":"info","ts":"2025-10-13T04:35:43.799898Z","caller":"etcdserver/server.go:2424","msg":"cluster version is updated","cluster-version":"3.6"}
{"level":"info","ts":"2025-10-13T04:35:43.799983Z","caller":"version/monitor.go:116","msg":"cluster version differs from storage version.","cluster-version":"3.6.0","storage-version":"3.5.0"}
{"level":"info","ts":"2025-10-13T04:35:43.800043Z","caller":"schema/migration.go:65","msg":"updated storage version","new-storage-version":"3.6.0"}
{"level":"info","ts":"2025-10-13T04:35:43.800106Z","caller":"v3rpc/health.go:63","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"warn","ts":"2025-10-13T04:35:43.800526Z","caller":"v3rpc/grpc.go:52","msg":"etcdserver: failed to register grpc metrics","error":"duplicate metrics collector registration attempted"}
{"level":"info","ts":"2025-10-13T04:35:43.800591Z","caller":"v3rpc/health.go:63","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-10-13T04:35:43.803930Z","caller":"embed/serve.go:283","msg":"serving client traffic securely","traffic":"grpc+http","address":"172.19.0.4:2379"}
{"level":"info","ts":"2025-10-13T04:35:43.805089Z","caller":"embed/serve.go:283","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"warn","ts":"2025-10-13T04:35:44.070347Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53224","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.081267Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53262","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.092459Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53280","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.097174Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53292","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.101335Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53306","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.105633Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53318","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.109053Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53332","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.114816Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53348","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.117841Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53374","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.121295Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53400","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.124971Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53410","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.127694Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53430","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.130472Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53458","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.133182Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53472","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.135678Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53490","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.138629Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53510","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.141482Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53532","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.143932Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53548","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.146495Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53564","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.158010Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53582","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.161118Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53602","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.163820Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53612","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.166455Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53628","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.168945Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53654","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.171403Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53684","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.173865Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53706","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.176303Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53734","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.178645Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53754","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.182184Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53778","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.183911Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53782","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.186616Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53796","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.188959Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53806","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.192112Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53822","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.194219Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53834","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.197930Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53852","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.201743Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53868","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.204361Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53884","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.206883Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53898","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.209549Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53916","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.211919Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53930","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.214403Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53944","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.216728Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53970","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.219516Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53986","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.223277Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:53996","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.236321Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54014","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.238674Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54028","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.241256Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54054","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.245146Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54064","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.246551Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54086","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.249114Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54110","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.251393Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54134","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.253827Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54154","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.258527Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54164","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.261233Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54180","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.264134Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54190","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.294336Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54214","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.296923Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54232","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.299329Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54242","server-name":"","error":"EOF"}
{"level":"warn","ts":"2025-10-13T04:35:44.317841Z","caller":"embed/config_logging.go:188","msg":"rejected connection on client endpoint","remote-addr":"127.0.0.1:54266","server-name":"","error":"EOF"}
==== END logs for container etcd of pod kube-system/etcd-lab-cluster-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-h2z44 ====
I1013 04:35:55.104603       1 main.go:390] probe TCP address lab-cluster-control-plane:6443
I1013 04:35:55.106271       1 main.go:109] connected to apiserver: https://lab-cluster-control-plane:6443
I1013 04:35:55.106484       1 main.go:139] hostIP = 172.19.0.4
podIP = 172.19.0.4
I1013 04:35:55.106894       1 main.go:148] setting mtu 65535 for CNI 
I1013 04:35:55.106904       1 main.go:178] kindnetd IP family: "ipv4"
I1013 04:35:55.106912       1 main.go:182] noMask IPv4 subnets: [10.244.0.0/16]
time="2025-10-13T04:35:55Z" level=info msg="Created plugin 10-kube-network-policies (kindnetd, handles RunPodSandbox,RemovePodSandbox)"
I1013 04:35:55.209140       1 controller.go:377] "Starting controller" name="kube-network-policies"
I1013 04:35:55.209170       1 controller.go:381] "Waiting for informer caches to sync"
I1013 04:35:55.209179       1 shared_informer.go:350] "Waiting for caches to sync" controller="kube-network-policies"
time="2025-10-13T04:35:55Z" level=info msg="Registering plugin 10-kube-network-policies..."
time="2025-10-13T04:35:55Z" level=info msg="Configuring plugin 10-kube-network-policies for runtime containerd/v2.1.3..."
time="2025-10-13T04:35:55Z" level=info msg="Started plugin 10-kube-network-policies..."
I1013 04:35:55.552818       1 nri.go:56] Synchronized state with the runtime (6 pods, 6 containers)...
I1013 04:35:55.710476       1 shared_informer.go:357] "Caches are synced" controller="kube-network-policies"
I1013 04:35:55.710517       1 metrics.go:72] Registering metrics
I1013 04:35:55.710599       1 controller.go:711] "Syncing nftables rules"
==== END logs for container kindnet-cni of pod kube-system/kindnet-h2z44 ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-n7pxq ====
Request log error: the server could not find the requested resource (get pods kindnet-n7pxq)
==== END logs for container kindnet-cni of pod kube-system/kindnet-n7pxq ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-z47wr ====
Request log error: the server could not find the requested resource (get pods kindnet-z47wr)
==== END logs for container kindnet-cni of pod kube-system/kindnet-z47wr ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-lab-cluster-control-plane ====
I1013 04:35:42.869480       1 options.go:263] external host was not specified, using 172.19.0.4
I1013 04:35:42.870472       1 server.go:150] Version: v1.34.0
I1013 04:35:42.870489       1 server.go:152] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
W1013 04:35:43.051900       1 logging.go:55] [core] [Channel #2 SubChannel #4]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W1013 04:35:43.051929       1 logging.go:55] [core] [Channel #2 SubChannel #6]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W1013 04:35:43.051944       1 logging.go:55] [core] [Channel #1 SubChannel #3]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W1013 04:35:43.052029       1 logging.go:55] [core] [Channel #1 SubChannel #5]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
I1013 04:35:43.053157       1 shared_informer.go:349] "Waiting for caches to sync" controller="node_authorizer"
I1013 04:35:43.059106       1 shared_informer.go:349] "Waiting for caches to sync" controller="*generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]"
I1013 04:35:43.061212       1 plugins.go:157] Loaded 14 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,PodTopologyLabels,MutatingAdmissionPolicy,MutatingAdmissionWebhook.
I1013 04:35:43.061225       1 plugins.go:160] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I1013 04:35:43.061347       1 instance.go:239] Using reconciler: lease
W1013 04:35:43.061774       1 logging.go:55] [core] [Channel #7 SubChannel #8]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W1013 04:35:43.061853       1 logging.go:55] [core] [Channel #7 SubChannel #9]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W1013 04:35:44.070299       1 logging.go:55] [core] [Channel #13 SubChannel #14]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.080654       1 logging.go:55] [core] [Channel #21 SubChannel #22]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
I1013 04:35:44.087301       1 handler.go:285] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W1013 04:35:44.087325       1 genericapiserver.go:784] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.092047       1 cidrallocator.go:197] starting ServiceCIDR Allocator Controller
W1013 04:35:44.092398       1 logging.go:55] [core] [Channel #27 SubChannel #28]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.097179       1 logging.go:55] [core] [Channel #31 SubChannel #32]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.101345       1 logging.go:55] [core] [Channel #35 SubChannel #36]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.105680       1 logging.go:55] [core] [Channel #39 SubChannel #40]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.109062       1 logging.go:55] [core] [Channel #43 SubChannel #44]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.112623       1 logging.go:55] [core] [Channel #47 SubChannel #48]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.117959       1 logging.go:55] [core] [Channel #51 SubChannel #52]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.121291       1 logging.go:55] [core] [Channel #55 SubChannel #56]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.124940       1 logging.go:55] [core] [Channel #59 SubChannel #60]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.127704       1 logging.go:55] [core] [Channel #63 SubChannel #64]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.130532       1 logging.go:55] [core] [Channel #67 SubChannel #68]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.133075       1 logging.go:55] [core] [Channel #71 SubChannel #72]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.135745       1 logging.go:55] [core] [Channel #75 SubChannel #76]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.138634       1 logging.go:55] [core] [Channel #79 SubChannel #80]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.141467       1 logging.go:55] [core] [Channel #83 SubChannel #84]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.143923       1 logging.go:55] [core] [Channel #87 SubChannel #88]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.146495       1 logging.go:55] [core] [Channel #91 SubChannel #92]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
I1013 04:35:44.156637       1 handler.go:285] Adding GroupVersion  v1 to ResourceManager
I1013 04:35:44.156841       1 apis.go:112] API group "internal.apiserver.k8s.io" is not enabled, skipping.
W1013 04:35:44.157950       1 logging.go:55] [core] [Channel #95 SubChannel #96]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.160928       1 logging.go:55] [core] [Channel #99 SubChannel #100]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.163575       1 logging.go:55] [core] [Channel #103 SubChannel #104]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.166427       1 logging.go:55] [core] [Channel #107 SubChannel #108]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.168951       1 logging.go:55] [core] [Channel #111 SubChannel #112]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.171401       1 logging.go:55] [core] [Channel #115 SubChannel #116]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.173873       1 logging.go:55] [core] [Channel #119 SubChannel #120]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.176299       1 logging.go:55] [core] [Channel #123 SubChannel #124]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.178648       1 logging.go:55] [core] [Channel #127 SubChannel #128]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.181477       1 logging.go:55] [core] [Channel #131 SubChannel #132]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.183974       1 logging.go:55] [core] [Channel #135 SubChannel #136]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.186643       1 logging.go:55] [core] [Channel #139 SubChannel #140]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.189087       1 logging.go:55] [core] [Channel #143 SubChannel #144]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.191731       1 logging.go:55] [core] [Channel #147 SubChannel #148]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.194178       1 logging.go:55] [core] [Channel #151 SubChannel #152]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.197638       1 logging.go:55] [core] [Channel #155 SubChannel #156]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.200862       1 logging.go:55] [core] [Channel #159 SubChannel #160]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.204313       1 logging.go:55] [core] [Channel #163 SubChannel #164]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.206892       1 logging.go:55] [core] [Channel #167 SubChannel #168]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.209498       1 logging.go:55] [core] [Channel #171 SubChannel #172]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.211911       1 logging.go:55] [core] [Channel #175 SubChannel #176]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.214406       1 logging.go:55] [core] [Channel #179 SubChannel #180]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.216819       1 logging.go:55] [core] [Channel #183 SubChannel #184]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.219589       1 logging.go:55] [core] [Channel #187 SubChannel #188]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
I1013 04:35:44.221921       1 apis.go:112] API group "storagemigration.k8s.io" is not enabled, skipping.
W1013 04:35:44.222397       1 logging.go:55] [core] [Channel #191 SubChannel #192]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.225818       1 logging.go:55] [core] [Channel #195 SubChannel #196]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.238672       1 logging.go:55] [core] [Channel #199 SubChannel #200]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.241097       1 logging.go:55] [core] [Channel #203 SubChannel #204]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.244195       1 logging.go:55] [core] [Channel #207 SubChannel #208]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.246536       1 logging.go:55] [core] [Channel #211 SubChannel #212]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.249032       1 logging.go:55] [core] [Channel #215 SubChannel #216]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.251385       1 logging.go:55] [core] [Channel #219 SubChannel #220]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.253829       1 logging.go:55] [core] [Channel #223 SubChannel #224]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.258587       1 logging.go:55] [core] [Channel #231 SubChannel #232]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.261160       1 logging.go:55] [core] [Channel #235 SubChannel #236]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.264166       1 logging.go:55] [core] [Channel #239 SubChannel #240]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.294260       1 logging.go:55] [core] [Channel #243 SubChannel #244]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
W1013 04:35:44.296861       1 logging.go:55] [core] [Channel #247 SubChannel #248]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: authentication handshake failed: context canceled"
W1013 04:35:44.299337       1 logging.go:55] [core] [Channel #251 SubChannel #252]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
I1013 04:35:44.308796       1 handler.go:285] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W1013 04:35:44.308809       1 genericapiserver.go:784] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.308811       1 genericapiserver.go:784] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.308973       1 handler.go:285] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W1013 04:35:44.308979       1 genericapiserver.go:784] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.309226       1 handler.go:285] Adding GroupVersion autoscaling v2 to ResourceManager
I1013 04:35:44.309472       1 handler.go:285] Adding GroupVersion autoscaling v1 to ResourceManager
W1013 04:35:44.309481       1 genericapiserver.go:784] Skipping API autoscaling/v2beta1 because it has no resources.
W1013 04:35:44.309483       1 genericapiserver.go:784] Skipping API autoscaling/v2beta2 because it has no resources.
I1013 04:35:44.309831       1 handler.go:285] Adding GroupVersion batch v1 to ResourceManager
W1013 04:35:44.309838       1 genericapiserver.go:784] Skipping API batch/v1beta1 because it has no resources.
I1013 04:35:44.310060       1 handler.go:285] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W1013 04:35:44.310066       1 genericapiserver.go:784] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.310067       1 genericapiserver.go:784] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.310236       1 handler.go:285] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W1013 04:35:44.310242       1 genericapiserver.go:784] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.310244       1 genericapiserver.go:784] Skipping API coordination.k8s.io/v1alpha2 because it has no resources.
I1013 04:35:44.310389       1 handler.go:285] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
W1013 04:35:44.310393       1 genericapiserver.go:784] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.311040       1 handler.go:285] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W1013 04:35:44.311045       1 genericapiserver.go:784] Skipping API networking.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.311201       1 handler.go:285] Adding GroupVersion node.k8s.io v1 to ResourceManager
W1013 04:35:44.311208       1 genericapiserver.go:784] Skipping API node.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.311210       1 genericapiserver.go:784] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.311442       1 handler.go:285] Adding GroupVersion policy v1 to ResourceManager
W1013 04:35:44.311448       1 genericapiserver.go:784] Skipping API policy/v1beta1 because it has no resources.
I1013 04:35:44.311869       1 handler.go:285] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W1013 04:35:44.311874       1 genericapiserver.go:784] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.311876       1 genericapiserver.go:784] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.311990       1 handler.go:285] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W1013 04:35:44.311994       1 genericapiserver.go:784] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.311995       1 genericapiserver.go:784] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.312627       1 handler.go:285] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W1013 04:35:44.312633       1 genericapiserver.go:784] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.312634       1 genericapiserver.go:784] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.312943       1 handler.go:285] Adding GroupVersion flowcontrol.apiserver.k8s.io v1 to ResourceManager
W1013 04:35:44.312948       1 genericapiserver.go:784] Skipping API flowcontrol.apiserver.k8s.io/v1beta3 because it has no resources.
W1013 04:35:44.312949       1 genericapiserver.go:784] Skipping API flowcontrol.apiserver.k8s.io/v1beta2 because it has no resources.
W1013 04:35:44.312950       1 genericapiserver.go:784] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.314050       1 handler.go:285] Adding GroupVersion apps v1 to ResourceManager
W1013 04:35:44.314055       1 genericapiserver.go:784] Skipping API apps/v1beta2 because it has no resources.
W1013 04:35:44.314056       1 genericapiserver.go:784] Skipping API apps/v1beta1 because it has no resources.
I1013 04:35:44.314694       1 handler.go:285] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W1013 04:35:44.314700       1 genericapiserver.go:784] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.314702       1 genericapiserver.go:784] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I1013 04:35:44.314879       1 handler.go:285] Adding GroupVersion events.k8s.io v1 to ResourceManager
W1013 04:35:44.314883       1 genericapiserver.go:784] Skipping API events.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.314899       1 genericapiserver.go:784] Skipping API resource.k8s.io/v1beta2 because it has no resources.
I1013 04:35:44.315521       1 handler.go:285] Adding GroupVersion resource.k8s.io v1 to ResourceManager
W1013 04:35:44.315527       1 genericapiserver.go:784] Skipping API resource.k8s.io/v1beta1 because it has no resources.
W1013 04:35:44.315529       1 genericapiserver.go:784] Skipping API resource.k8s.io/v1alpha3 because it has no resources.
W1013 04:35:44.316802       1 logging.go:55] [core] [Channel #255 SubChannel #256]grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", BalancerAttributes: {"<%!p(pickfirstleaf.managedByPickfirstKeyType={})>": "<%!p(bool=true)>" }}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: operation was canceled"
I1013 04:35:44.319329       1 handler.go:285] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W1013 04:35:44.319336       1 genericapiserver.go:784] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I1013 04:35:44.462663       1 secure_serving.go:211] Serving securely on [::]:6443
I1013 04:35:44.462700       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1013 04:35:44.462746       1 dynamic_serving_content.go:135] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I1013 04:35:44.462772       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I1013 04:35:44.462836       1 apiservice_controller.go:100] Starting APIServiceRegistrationController
I1013 04:35:44.462843       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1013 04:35:44.462851       1 aggregator.go:169] waiting for initial CRD sync...
I1013 04:35:44.463074       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1013 04:35:44.463203       1 local_available_controller.go:156] Starting LocalAvailability controller
I1013 04:35:44.463209       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I1013 04:35:44.463215       1 controller.go:80] Starting OpenAPI V3 AggregationController
I1013 04:35:44.463263       1 customresource_discovery_controller.go:294] Starting DiscoveryController
I1013 04:35:44.463311       1 controller.go:119] Starting legacy_token_tracking_controller
I1013 04:35:44.463323       1 shared_informer.go:349] "Waiting for caches to sync" controller="configmaps"
I1013 04:35:44.463328       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1013 04:35:44.463342       1 controller.go:78] Starting OpenAPI AggregationController
I1013 04:35:44.463354       1 system_namespaces_controller.go:66] Starting system namespaces controller
I1013 04:35:44.463358       1 apf_controller.go:377] Starting API Priority and Fairness config controller
I1013 04:35:44.463367       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I1013 04:35:44.463376       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I1013 04:35:44.463379       1 shared_informer.go:349] "Waiting for caches to sync" controller="crd-autoregister"
I1013 04:35:44.463394       1 remote_available_controller.go:425] Starting RemoteAvailability controller
I1013 04:35:44.463403       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I1013 04:35:44.463441       1 default_servicecidr_controller.go:111] Starting kubernetes-service-cidr-controller
I1013 04:35:44.463449       1 shared_informer.go:349] "Waiting for caches to sync" controller="kubernetes-service-cidr-controller"
I1013 04:35:44.463470       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1013 04:35:44.463501       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1013 04:35:44.464653       1 controller.go:142] Starting OpenAPI controller
I1013 04:35:44.464670       1 controller.go:90] Starting OpenAPI V3 controller
I1013 04:35:44.464679       1 naming_controller.go:299] Starting NamingConditionController
I1013 04:35:44.464687       1 establishing_controller.go:81] Starting EstablishingController
I1013 04:35:44.464698       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I1013 04:35:44.464704       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I1013 04:35:44.464709       1 crd_finalizer.go:269] Starting CRDFinalizer
I1013 04:35:44.463311       1 cluster_authentication_trust_controller.go:459] Starting cluster_authentication_trust_controller controller
I1013 04:35:44.464739       1 shared_informer.go:349] "Waiting for caches to sync" controller="cluster_authentication_trust_controller"
I1013 04:35:44.464810       1 repairip.go:210] Starting ipallocator-repair-controller
I1013 04:35:44.464836       1 shared_informer.go:349] "Waiting for caches to sync" controller="ipallocator-repair-controller"
E1013 04:35:44.524772       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I1013 04:35:44.553230       1 shared_informer.go:356] "Caches are synced" controller="node_authorizer"
I1013 04:35:44.560269       1 shared_informer.go:356] "Caches are synced" controller="*generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]"
I1013 04:35:44.560308       1 policy_source.go:240] refreshing policies
I1013 04:35:44.564477       1 shared_informer.go:356] "Caches are synced" controller="crd-autoregister"
I1013 04:35:44.564496       1 cache.go:39] Caches are synced for LocalAvailability controller
I1013 04:35:44.564500       1 shared_informer.go:356] "Caches are synced" controller="configmaps"
I1013 04:35:44.564558       1 apf_controller.go:382] Running API Priority and Fairness config worker
I1013 04:35:44.564569       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I1013 04:35:44.564599       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1013 04:35:44.564610       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I1013 04:35:44.564611       1 aggregator.go:171] initial CRD sync complete...
I1013 04:35:44.564624       1 autoregister_controller.go:144] Starting autoregister controller
I1013 04:35:44.564628       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1013 04:35:44.564630       1 cache.go:39] Caches are synced for autoregister controller
I1013 04:35:44.564767       1 shared_informer.go:356] "Caches are synced" controller="cluster_authentication_trust_controller"
I1013 04:35:44.564783       1 shared_informer.go:356] "Caches are synced" controller="kubernetes-service-cidr-controller"
I1013 04:35:44.564814       1 cache.go:39] Caches are synced for RemoteAvailability controller
I1013 04:35:44.564807       1 default_servicecidr_controller.go:166] Creating default ServiceCIDR with CIDRs: [10.96.0.0/16]
I1013 04:35:44.564894       1 shared_informer.go:356] "Caches are synced" controller="ipallocator-repair-controller"
I1013 04:35:44.565291       1 controller.go:667] quota admission added evaluator for: namespaces
I1013 04:35:44.568579       1 default_servicecidr_controller.go:228] Setting default ServiceCIDR condition Ready to True
I1013 04:35:44.568808       1 cidrallocator.go:301] created ClusterIP allocator for Service CIDR 10.96.0.0/16
I1013 04:35:44.572369       1 default_servicecidr_controller.go:137] Shutting down kubernetes-service-cidr-controller
I1013 04:35:44.572370       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/16
I1013 04:35:44.726853       1 controller.go:667] quota admission added evaluator for: leases.coordination.k8s.io
I1013 04:35:45.468870       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I1013 04:35:45.474905       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I1013 04:35:45.474932       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I1013 04:35:45.647406       1 controller.go:667] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1013 04:35:45.655959       1 controller.go:667] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1013 04:35:45.667708       1 alloc.go:328] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W1013 04:35:45.669209       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [172.19.0.4]
I1013 04:35:45.669591       1 controller.go:667] quota admission added evaluator for: endpoints
I1013 04:35:45.670866       1 controller.go:667] quota admission added evaluator for: endpointslices.discovery.k8s.io
I1013 04:35:46.557270       1 controller.go:667] quota admission added evaluator for: serviceaccounts
I1013 04:35:46.560726       1 controller.go:667] quota admission added evaluator for: deployments.apps
I1013 04:35:46.567455       1 alloc.go:328] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I1013 04:35:46.572771       1 controller.go:667] quota admission added evaluator for: daemonsets.apps
I1013 04:35:53.559185       1 controller.go:667] quota admission added evaluator for: replicasets.apps
I1013 04:35:53.655110       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/16
I1013 04:35:53.656995       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/16
I1013 04:35:53.907369       1 controller.go:667] quota admission added evaluator for: controllerrevisions.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-lab-cluster-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-lab-cluster-control-plane ====
I1013 04:35:43.038852       1 serving.go:386] Generated self-signed cert in-memory
I1013 04:35:43.164096       1 controllermanager.go:191] "Starting" version="v1.34.0"
I1013 04:35:43.164131       1 controllermanager.go:193] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1013 04:35:43.164863       1 secure_serving.go:211] Serving securely on 127.0.0.1:10257
I1013 04:35:43.164967       1 leaderelection.go:257] attempting to acquire leader lease kube-system/kube-controller-manager...
I1013 04:35:43.165079       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1013 04:35:43.165093       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I1013 04:35:43.165144       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
E1013 04:35:44.471600       1 leaderelection.go:448] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I1013 04:35:47.798128       1 leaderelection.go:271] successfully acquired lease kube-system/kube-controller-manager
I1013 04:35:47.798314       1 event.go:389] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="lab-cluster-control-plane_346de7ef-9683-490d-9b67-14c08f0e8771 became leader"
I1013 04:35:47.801087       1 controllermanager.go:781] "Started controller" controller="serviceaccount-token-controller"
I1013 04:35:47.801197       1 shared_informer.go:349] "Waiting for caches to sync" controller="tokens"
I1013 04:35:47.805135       1 controllermanager.go:781] "Started controller" controller="taint-eviction-controller"
I1013 04:35:47.805264       1 taint_eviction.go:282] "Starting" logger="taint-eviction-controller" controller="taint-eviction-controller"
I1013 04:35:47.805277       1 taint_eviction.go:288] "Sending events to api server" logger="taint-eviction-controller"
I1013 04:35:47.805285       1 shared_informer.go:349] "Waiting for caches to sync" controller="taint-eviction-controller"
I1013 04:35:47.807453       1 controllermanager.go:781] "Started controller" controller="job-controller"
I1013 04:35:47.807546       1 job_controller.go:257] "Starting job controller" logger="job-controller"
I1013 04:35:47.807553       1 shared_informer.go:349] "Waiting for caches to sync" controller="job"
I1013 04:35:47.809431       1 controllermanager.go:781] "Started controller" controller="deployment-controller"
I1013 04:35:47.809513       1 deployment_controller.go:173] "Starting controller" logger="deployment-controller" controller="deployment"
I1013 04:35:47.809522       1 shared_informer.go:349] "Waiting for caches to sync" controller="deployment"
I1013 04:35:47.811749       1 controllermanager.go:781] "Started controller" controller="cronjob-controller"
I1013 04:35:47.811756       1 controllermanager.go:739] "Skipping a cloud provider controller" controller="service-lb-controller"
I1013 04:35:47.811850       1 cronjob_controllerv2.go:145] "Starting cronjob controller v2" logger="cronjob-controller"
I1013 04:35:47.811856       1 shared_informer.go:349] "Waiting for caches to sync" controller="cronjob"
I1013 04:35:47.813536       1 controllermanager.go:781] "Started controller" controller="root-ca-certificate-publisher-controller"
I1013 04:35:47.813590       1 publisher.go:107] "Starting root CA cert publisher controller" logger="root-ca-certificate-publisher-controller"
I1013 04:35:47.813596       1 shared_informer.go:349] "Waiting for caches to sync" controller="crt configmap"
I1013 04:35:47.815015       1 controllermanager.go:781] "Started controller" controller="ephemeral-volume-controller"
I1013 04:35:47.815164       1 controller.go:173] "Starting ephemeral volume controller" logger="ephemeral-volume-controller"
I1013 04:35:47.815175       1 shared_informer.go:349] "Waiting for caches to sync" controller="ephemeral"
I1013 04:35:47.816661       1 controllermanager.go:781] "Started controller" controller="service-cidr-controller"
I1013 04:35:47.816721       1 servicecidrs_controller.go:137] "Starting" logger="service-cidr-controller" controller="service-cidr-controller"
I1013 04:35:47.816728       1 shared_informer.go:349] "Waiting for caches to sync" controller="service-cidr-controller"
I1013 04:35:47.818558       1 controllermanager.go:781] "Started controller" controller="replicationcontroller-controller"
I1013 04:35:47.818760       1 replica_set.go:243] "Starting controller" logger="replicationcontroller-controller" name="replicationcontroller"
I1013 04:35:47.818780       1 shared_informer.go:349] "Waiting for caches to sync" controller="ReplicationController"
I1013 04:35:47.821291       1 controllermanager.go:781] "Started controller" controller="certificatesigningrequest-approving-controller"
I1013 04:35:47.821307       1 controllermanager.go:739] "Skipping a cloud provider controller" controller="cloud-node-lifecycle-controller"
I1013 04:35:47.821312       1 controllermanager.go:733] "Controller is disabled by a feature gate" controller="kube-apiserver-serving-clustertrustbundle-publisher-controller" requiredFeatureGates=["ClusterTrustBundle"]
I1013 04:35:47.821334       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-approving-controller" name="csrapproving"
I1013 04:35:47.821340       1 controllermanager.go:744] "Warning: controller is disabled" controller="selinux-warning-controller"
I1013 04:35:47.821346       1 shared_informer.go:349] "Waiting for caches to sync" controller="certificate-csrapproving"
I1013 04:35:47.901369       1 shared_informer.go:356] "Caches are synced" controller="tokens"
I1013 04:35:48.004531       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="cronjobs.batch"
I1013 04:35:48.004597       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="limitranges"
I1013 04:35:48.004609       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="jobs.batch"
I1013 04:35:48.004643       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="resourceclaimtemplates.resource.k8s.io"
I1013 04:35:48.004672       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="deployments.apps"
I1013 04:35:48.004724       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="statefulsets.apps"
I1013 04:35:48.004746       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="podtemplates"
I1013 04:35:48.004764       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="serviceaccounts"
I1013 04:35:48.004784       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="networkpolicies.networking.k8s.io"
I1013 04:35:48.004794       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpoints"
I1013 04:35:48.004804       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="daemonsets.apps"
I1013 04:35:48.004811       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="ingresses.networking.k8s.io"
I1013 04:35:48.004816       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="poddisruptionbudgets.policy"
I1013 04:35:48.004821       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="roles.rbac.authorization.k8s.io"
I1013 04:35:48.004852       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="csistoragecapacities.storage.k8s.io"
I1013 04:35:48.004865       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="controllerrevisions.apps"
I1013 04:35:48.004873       1 shared_informer.go:682] "Warning: resync period is smaller than resync check period and the informer has already started. Changing it to the resync check period" resyncPeriod="17h11m59.918494799s" resyncCheckPeriod="18h50m39.910390503s"
I1013 04:35:48.004883       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="rolebindings.rbac.authorization.k8s.io"
I1013 04:35:48.004895       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="replicasets.apps"
I1013 04:35:48.004904       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="horizontalpodautoscalers.autoscaling"
I1013 04:35:48.004908       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpointslices.discovery.k8s.io"
I1013 04:35:48.004926       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="leases.coordination.k8s.io"
I1013 04:35:48.004936       1 controllermanager.go:781] "Started controller" controller="resourcequota-controller"
I1013 04:35:48.005022       1 resource_quota_controller.go:300] "Starting resource quota controller" logger="resourcequota-controller"
I1013 04:35:48.005029       1 shared_informer.go:349] "Waiting for caches to sync" controller="resource quota"
I1013 04:35:48.005037       1 resource_quota_monitor.go:308] "QuotaMonitor running" logger="resourcequota-controller"
I1013 04:35:48.251717       1 garbagecollector.go:144] "Starting controller" logger="garbage-collector-controller" controller="garbagecollector"
I1013 04:35:48.251744       1 shared_informer.go:349] "Waiting for caches to sync" controller="garbage collector"
I1013 04:35:48.251746       1 controllermanager.go:781] "Started controller" controller="garbage-collector-controller"
I1013 04:35:48.251764       1 graph_builder.go:351] "Running" logger="garbage-collector-controller" component="GraphBuilder"
I1013 04:35:48.653576       1 controllermanager.go:781] "Started controller" controller="horizontal-pod-autoscaler-controller"
I1013 04:35:48.653679       1 horizontal.go:205] "Starting HPA controller" logger="horizontal-pod-autoscaler-controller"
I1013 04:35:48.653695       1 shared_informer.go:349] "Waiting for caches to sync" controller="HPA"
I1013 04:35:48.852718       1 controllermanager.go:781] "Started controller" controller="disruption-controller"
I1013 04:35:48.852834       1 disruption.go:457] "Sending events to api server." logger="disruption-controller"
I1013 04:35:48.852869       1 disruption.go:468] "Starting disruption controller" logger="disruption-controller"
I1013 04:35:48.852882       1 shared_informer.go:349] "Waiting for caches to sync" controller="disruption"
I1013 04:35:49.003473       1 controllermanager.go:781] "Started controller" controller="statefulset-controller"
I1013 04:35:49.003561       1 stateful_set.go:169] "Starting stateful set controller" logger="statefulset-controller"
I1013 04:35:49.003575       1 shared_informer.go:349] "Waiting for caches to sync" controller="stateful set"
I1013 04:35:49.153271       1 controllermanager.go:781] "Started controller" controller="clusterrole-aggregation-controller"
I1013 04:35:49.153357       1 clusterroleaggregation_controller.go:194] "Starting ClusterRoleAggregator controller" logger="clusterrole-aggregation-controller"
I1013 04:35:49.153374       1 shared_informer.go:349] "Waiting for caches to sync" controller="ClusterRoleAggregator"
I1013 04:35:49.304767       1 controllermanager.go:781] "Started controller" controller="ttl-after-finished-controller"
I1013 04:35:49.304833       1 controllermanager.go:759] "Warning: skipping controller" controller="storage-version-migrator-controller"
I1013 04:35:49.305095       1 ttlafterfinished_controller.go:112] "Starting TTL after finished controller" logger="ttl-after-finished-controller"
I1013 04:35:49.305124       1 shared_informer.go:349] "Waiting for caches to sync" controller="TTL after finished"
I1013 04:35:49.353224       1 node_lifecycle_controller.go:419] "Controller will reconcile labels" logger="node-lifecycle-controller"
I1013 04:35:49.353269       1 controllermanager.go:781] "Started controller" controller="node-lifecycle-controller"
I1013 04:35:49.353339       1 node_lifecycle_controller.go:453] "Sending events to api server" logger="node-lifecycle-controller"
I1013 04:35:49.353361       1 node_lifecycle_controller.go:464] "Starting node controller" logger="node-lifecycle-controller"
I1013 04:35:49.353369       1 shared_informer.go:349] "Waiting for caches to sync" controller="taint"
I1013 04:35:49.501627       1 controllermanager.go:781] "Started controller" controller="pod-garbage-collector-controller"
I1013 04:35:49.501707       1 gc_controller.go:99] "Starting GC controller" logger="pod-garbage-collector-controller"
I1013 04:35:49.501720       1 shared_informer.go:349] "Waiting for caches to sync" controller="GC"
I1013 04:35:49.552349       1 controllermanager.go:781] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I1013 04:35:49.552389       1 cleaner.go:83] "Starting CSR cleaner controller" logger="certificatesigningrequest-cleaner-controller"
I1013 04:35:49.702886       1 controllermanager.go:781] "Started controller" controller="ttl-controller"
I1013 04:35:49.702971       1 ttl_controller.go:127] "Starting TTL controller" logger="ttl-controller"
I1013 04:35:49.702982       1 shared_informer.go:349] "Waiting for caches to sync" controller="TTL"
I1013 04:35:49.853151       1 controllermanager.go:781] "Started controller" controller="persistentvolume-protection-controller"
I1013 04:35:49.853175       1 controllermanager.go:733] "Controller is disabled by a feature gate" controller="storageversion-garbage-collector-controller" requiredFeatureGates=["APIServerIdentity","StorageVersionAPI"]
I1013 04:35:49.853204       1 pv_protection_controller.go:81] "Starting PV protection controller" logger="persistentvolume-protection-controller"
I1013 04:35:49.853217       1 shared_informer.go:349] "Waiting for caches to sync" controller="PV protection"
I1013 04:35:49.904194       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-serving"
I1013 04:35:49.904222       1 shared_informer.go:349] "Waiting for caches to sync" controller="certificate-csrsigning-kubelet-serving"
I1013 04:35:49.904243       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1013 04:35:49.904941       1 controllermanager.go:781] "Started controller" controller="certificatesigningrequest-signing-controller"
I1013 04:35:49.905036       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-legacy-unknown"
I1013 04:35:49.905048       1 shared_informer.go:349] "Waiting for caches to sync" controller="certificate-csrsigning-legacy-unknown"
I1013 04:35:49.905081       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-client"
I1013 04:35:49.905095       1 shared_informer.go:349] "Waiting for caches to sync" controller="certificate-csrsigning-kubelet-client"
I1013 04:35:49.905115       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kube-apiserver-client"
I1013 04:35:49.905120       1 shared_informer.go:349] "Waiting for caches to sync" controller="certificate-csrsigning-kube-apiserver-client"
I1013 04:35:49.905145       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1013 04:35:49.905219       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1013 04:35:49.905231       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1013 04:35:50.051669       1 controllermanager.go:781] "Started controller" controller="persistentvolume-expander-controller"
I1013 04:35:50.053137       1 expand_controller.go:327] "Starting expand controller" logger="persistentvolume-expander-controller"
I1013 04:35:50.053190       1 shared_informer.go:349] "Waiting for caches to sync" controller="expand"
I1013 04:35:50.254733       1 controllermanager.go:781] "Started controller" controller="validatingadmissionpolicy-status-controller"
I1013 04:35:50.254833       1 shared_informer.go:349] "Waiting for caches to sync" controller="validatingadmissionpolicy-status"
I1013 04:35:50.407699       1 controllermanager.go:781] "Started controller" controller="endpointslice-mirroring-controller"
I1013 04:35:50.407738       1 controllermanager.go:733] "Controller is disabled by a feature gate" controller="podcertificaterequest-cleaner-controller" requiredFeatureGates=["PodCertificateRequest"]
I1013 04:35:50.407839       1 endpointslicemirroring_controller.go:227] "Starting EndpointSliceMirroring controller" logger="endpointslice-mirroring-controller"
I1013 04:35:50.407855       1 shared_informer.go:349] "Waiting for caches to sync" controller="endpoint_slice_mirroring"
I1013 04:35:50.557653       1 range_allocator.go:112] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses" logger="node-ipam-controller"
I1013 04:35:50.557694       1 controllermanager.go:781] "Started controller" controller="node-ipam-controller"
I1013 04:35:50.557851       1 node_ipam_controller.go:141] "Starting ipam controller" logger="node-ipam-controller"
I1013 04:35:50.557867       1 shared_informer.go:349] "Waiting for caches to sync" controller="node"
I1013 04:35:50.703655       1 controllermanager.go:781] "Started controller" controller="persistentvolume-attach-detach-controller"
I1013 04:35:50.703759       1 attach_detach_controller.go:336] "Starting attach detach controller" logger="persistentvolume-attach-detach-controller"
I1013 04:35:50.703774       1 shared_informer.go:349] "Waiting for caches to sync" controller="attach detach"
I1013 04:35:50.857690       1 controllermanager.go:781] "Started controller" controller="persistentvolumeclaim-protection-controller"
I1013 04:35:50.857767       1 pvc_protection_controller.go:168] "Starting PVC protection controller" logger="persistentvolumeclaim-protection-controller"
I1013 04:35:50.857775       1 shared_informer.go:349] "Waiting for caches to sync" controller="PVC protection"
I1013 04:35:51.006374       1 controllermanager.go:781] "Started controller" controller="token-cleaner-controller"
I1013 04:35:51.006519       1 tokencleaner.go:117] "Starting token cleaner controller" logger="token-cleaner-controller"
I1013 04:35:51.006527       1 shared_informer.go:349] "Waiting for caches to sync" controller="token_cleaner"
I1013 04:35:51.006532       1 shared_informer.go:356] "Caches are synced" controller="token_cleaner"
I1013 04:35:51.158600       1 controllermanager.go:781] "Started controller" controller="endpoints-controller"
I1013 04:35:51.158726       1 endpoints_controller.go:188] "Starting endpoint controller" logger="endpoints-controller"
I1013 04:35:51.158742       1 shared_informer.go:349] "Waiting for caches to sync" controller="endpoint"
I1013 04:35:51.306854       1 controllermanager.go:781] "Started controller" controller="endpointslice-controller"
I1013 04:35:51.306979       1 endpointslice_controller.go:281] "Starting endpoint slice controller" logger="endpointslice-controller"
I1013 04:35:51.306997       1 shared_informer.go:349] "Waiting for caches to sync" controller="endpoint_slice"
I1013 04:35:51.454390       1 controllermanager.go:781] "Started controller" controller="daemonset-controller"
I1013 04:35:51.454618       1 daemon_controller.go:310] "Starting daemon sets controller" logger="daemonset-controller"
I1013 04:35:51.454640       1 shared_informer.go:349] "Waiting for caches to sync" controller="daemon sets"
I1013 04:35:51.603788       1 controllermanager.go:781] "Started controller" controller="replicaset-controller"
I1013 04:35:51.603837       1 controllermanager.go:739] "Skipping a cloud provider controller" controller="node-route-controller"
I1013 04:35:51.604097       1 replica_set.go:243] "Starting controller" logger="replicaset-controller" name="replicaset"
I1013 04:35:51.604120       1 shared_informer.go:349] "Waiting for caches to sync" controller="ReplicaSet"
I1013 04:35:51.757065       1 controllermanager.go:781] "Started controller" controller="persistentvolume-binder-controller"
I1013 04:35:51.757148       1 pv_controller_base.go:308] "Starting persistent volume controller" logger="persistentvolume-binder-controller"
I1013 04:35:51.757161       1 shared_informer.go:349] "Waiting for caches to sync" controller="persistent volume"
I1013 04:35:51.904771       1 controllermanager.go:781] "Started controller" controller="volumeattributesclass-protection-controller"
I1013 04:35:51.904819       1 vac_protection_controller.go:206] "Starting VAC protection controller" logger="volumeattributesclass-protection-controller"
I1013 04:35:51.904842       1 shared_informer.go:349] "Waiting for caches to sync" controller="VAC protection"
I1013 04:35:52.157607       1 controllermanager.go:781] "Started controller" controller="namespace-controller"
I1013 04:35:52.157638       1 namespace_controller.go:202] "Starting namespace controller" logger="namespace-controller"
I1013 04:35:52.157650       1 shared_informer.go:349] "Waiting for caches to sync" controller="namespace"
I1013 04:35:52.303227       1 controllermanager.go:781] "Started controller" controller="serviceaccount-controller"
I1013 04:35:52.303319       1 serviceaccounts_controller.go:114] "Starting service account controller" logger="serviceaccount-controller"
I1013 04:35:52.303336       1 shared_informer.go:349] "Waiting for caches to sync" controller="service account"
I1013 04:35:52.457112       1 controllermanager.go:781] "Started controller" controller="bootstrap-signer-controller"
I1013 04:35:52.457264       1 shared_informer.go:349] "Waiting for caches to sync" controller="bootstrap_signer"
I1013 04:35:52.604786       1 controllermanager.go:781] "Started controller" controller="resourceclaim-controller"
I1013 04:35:52.604827       1 controllermanager.go:733] "Controller is disabled by a feature gate" controller="device-taint-eviction-controller" requiredFeatureGates=["DynamicResourceAllocation","DRADeviceTaints"]
I1013 04:35:52.604932       1 controller.go:397] "Starting resource claim controller" logger="resourceclaim-controller"
I1013 04:35:52.605015       1 shared_informer.go:349] "Waiting for caches to sync" controller="resource_claim"
I1013 04:35:52.754990       1 controllermanager.go:781] "Started controller" controller="legacy-serviceaccount-token-cleaner-controller"
I1013 04:35:52.755041       1 legacy_serviceaccount_token_cleaner.go:103] "Starting legacy service account token cleaner controller" logger="legacy-serviceaccount-token-cleaner-controller"
I1013 04:35:52.755055       1 shared_informer.go:349] "Waiting for caches to sync" controller="legacy-service-account-token-cleaner"
I1013 04:35:52.758015       1 shared_informer.go:349] "Waiting for caches to sync" controller="resource quota"
I1013 04:35:52.769772       1 shared_informer.go:349] "Waiting for caches to sync" controller="garbage collector"
I1013 04:35:52.776322       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-control-plane\" does not exist"
I1013 04:35:52.802129       1 shared_informer.go:356] "Caches are synced" controller="GC"
I1013 04:35:52.804556       1 shared_informer.go:356] "Caches are synced" controller="service account"
I1013 04:35:52.804593       1 shared_informer.go:356] "Caches are synced" controller="ReplicaSet"
I1013 04:35:52.804632       1 shared_informer.go:356] "Caches are synced" controller="certificate-csrsigning-kubelet-serving"
I1013 04:35:52.804667       1 shared_informer.go:356] "Caches are synced" controller="attach detach"
I1013 04:35:52.804635       1 shared_informer.go:356] "Caches are synced" controller="stateful set"
I1013 04:35:52.804750       1 shared_informer.go:356] "Caches are synced" controller="TTL"
I1013 04:35:52.804909       1 shared_informer.go:356] "Caches are synced" controller="VAC protection"
I1013 04:35:52.805084       1 shared_informer.go:356] "Caches are synced" controller="resource quota"
I1013 04:35:52.805166       1 shared_informer.go:356] "Caches are synced" controller="certificate-csrsigning-kubelet-client"
I1013 04:35:52.805201       1 shared_informer.go:356] "Caches are synced" controller="resource_claim"
I1013 04:35:52.805201       1 shared_informer.go:356] "Caches are synced" controller="certificate-csrsigning-kube-apiserver-client"
I1013 04:35:52.805222       1 shared_informer.go:356] "Caches are synced" controller="TTL after finished"
I1013 04:35:52.805201       1 shared_informer.go:356] "Caches are synced" controller="certificate-csrsigning-legacy-unknown"
I1013 04:35:52.805705       1 shared_informer.go:356] "Caches are synced" controller="taint-eviction-controller"
I1013 04:35:52.808263       1 shared_informer.go:356] "Caches are synced" controller="job"
I1013 04:35:52.808305       1 shared_informer.go:356] "Caches are synced" controller="endpoint_slice"
I1013 04:35:52.808358       1 shared_informer.go:356] "Caches are synced" controller="endpoint_slice_mirroring"
I1013 04:35:52.810429       1 shared_informer.go:356] "Caches are synced" controller="deployment"
I1013 04:35:52.812310       1 shared_informer.go:356] "Caches are synced" controller="cronjob"
I1013 04:35:52.814137       1 shared_informer.go:356] "Caches are synced" controller="crt configmap"
I1013 04:35:52.816253       1 shared_informer.go:356] "Caches are synced" controller="ephemeral"
I1013 04:35:52.818280       1 shared_informer.go:356] "Caches are synced" controller="service-cidr-controller"
I1013 04:35:52.820343       1 shared_informer.go:356] "Caches are synced" controller="ReplicationController"
I1013 04:35:52.822276       1 shared_informer.go:356] "Caches are synced" controller="certificate-csrapproving"
I1013 04:35:52.852269       1 shared_informer.go:356] "Caches are synced" controller="garbage collector"
I1013 04:35:52.852307       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I1013 04:35:52.852319       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I1013 04:35:52.854282       1 shared_informer.go:356] "Caches are synced" controller="disruption"
I1013 04:35:52.854342       1 shared_informer.go:356] "Caches are synced" controller="taint"
I1013 04:35:52.854432       1 node_lifecycle_controller.go:1221] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I1013 04:35:52.854460       1 shared_informer.go:356] "Caches are synced" controller="ClusterRoleAggregator"
I1013 04:35:52.854497       1 node_lifecycle_controller.go:873] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="lab-cluster-control-plane"
I1013 04:35:52.854549       1 node_lifecycle_controller.go:1025] "Controller detected that all Nodes are not-Ready. Entering master disruption mode" logger="node-lifecycle-controller"
I1013 04:35:52.854887       1 shared_informer.go:356] "Caches are synced" controller="PV protection"
I1013 04:35:52.854908       1 shared_informer.go:356] "Caches are synced" controller="expand"
I1013 04:35:52.855130       1 shared_informer.go:356] "Caches are synced" controller="validatingadmissionpolicy-status"
I1013 04:35:52.855164       1 shared_informer.go:356] "Caches are synced" controller="HPA"
I1013 04:35:52.855193       1 shared_informer.go:356] "Caches are synced" controller="legacy-service-account-token-cleaner"
I1013 04:35:52.855215       1 shared_informer.go:356] "Caches are synced" controller="daemon sets"
I1013 04:35:52.857395       1 shared_informer.go:356] "Caches are synced" controller="bootstrap_signer"
I1013 04:35:52.857536       1 shared_informer.go:356] "Caches are synced" controller="persistent volume"
I1013 04:35:52.857690       1 shared_informer.go:356] "Caches are synced" controller="namespace"
I1013 04:35:52.858188       1 shared_informer.go:356] "Caches are synced" controller="PVC protection"
I1013 04:35:52.858213       1 shared_informer.go:356] "Caches are synced" controller="node"
I1013 04:35:52.858225       1 shared_informer.go:356] "Caches are synced" controller="resource quota"
I1013 04:35:52.858230       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I1013 04:35:52.858243       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I1013 04:35:52.858247       1 shared_informer.go:349] "Waiting for caches to sync" controller="cidrallocator"
I1013 04:35:52.858251       1 shared_informer.go:356] "Caches are synced" controller="cidrallocator"
I1013 04:35:52.859239       1 shared_informer.go:356] "Caches are synced" controller="endpoint"
I1013 04:35:52.861962       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="lab-cluster-control-plane" podCIDRs=["10.244.0.0/24"]
I1013 04:35:52.870584       1 shared_informer.go:356] "Caches are synced" controller="garbage collector"
I1013 04:35:58.590921       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-worker\" does not exist"
I1013 04:35:58.593863       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="lab-cluster-worker" podCIDRs=["10.244.1.0/24"]
I1013 04:35:58.800309       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-worker2\" does not exist"
I1013 04:35:58.803379       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="lab-cluster-worker2" podCIDRs=["10.244.2.0/24"]
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-lab-cluster-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-cnxbp ====
Request log error: the server could not find the requested resource (get pods kube-proxy-cnxbp)
==== END logs for container kube-proxy of pod kube-system/kube-proxy-cnxbp ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-h4vb8 ====
Request log error: the server could not find the requested resource (get pods kube-proxy-h4vb8)
==== END logs for container kube-proxy of pod kube-system/kube-proxy-h4vb8 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-h9n2b ====
I1013 04:35:54.654880       1 shared_informer.go:349] "Waiting for caches to sync" controller="node informer cache"
I1013 04:35:54.756543       1 shared_informer.go:356] "Caches are synced" controller="node informer cache"
I1013 04:35:54.756585       1 server.go:219] "Successfully retrieved NodeIPs" NodeIPs=["172.19.0.4"]
I1013 04:35:54.756698       1 conntrack.go:121] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_established" value=86400
I1013 04:35:54.756724       1 conntrack.go:121] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
E1013 04:35:54.756740       1 server.go:256] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I1013 04:35:54.762683       1 server.go:265] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I1013 04:35:54.762699       1 server_linux.go:132] "Using iptables Proxier"
I1013 04:35:54.764547       1 proxier.go:242] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I1013 04:35:54.764698       1 server.go:527] "Version info" version="v1.34.0"
I1013 04:35:54.764708       1 server.go:529] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1013 04:35:54.765181       1 config.go:403] "Starting serviceCIDR config controller"
I1013 04:35:54.765191       1 shared_informer.go:349] "Waiting for caches to sync" controller="serviceCIDR config"
I1013 04:35:54.765351       1 config.go:309] "Starting node config controller"
I1013 04:35:54.765365       1 shared_informer.go:349] "Waiting for caches to sync" controller="node config"
I1013 04:35:54.765583       1 config.go:200] "Starting service config controller"
I1013 04:35:54.765595       1 shared_informer.go:349] "Waiting for caches to sync" controller="service config"
I1013 04:35:54.765587       1 config.go:106] "Starting endpoint slice config controller"
I1013 04:35:54.765604       1 shared_informer.go:349] "Waiting for caches to sync" controller="endpoint slice config"
I1013 04:35:54.867108       1 shared_informer.go:356] "Caches are synced" controller="serviceCIDR config"
I1013 04:35:54.868282       1 shared_informer.go:356] "Caches are synced" controller="endpoint slice config"
I1013 04:35:54.868344       1 shared_informer.go:356] "Caches are synced" controller="service config"
I1013 04:35:54.868357       1 shared_informer.go:356] "Caches are synced" controller="node config"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-h9n2b ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-lab-cluster-control-plane ====
I1013 04:35:43.013715       1 serving.go:386] Generated self-signed cert in-memory
W1013 04:35:44.476976       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W1013 04:35:44.477005       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W1013 04:35:44.477012       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W1013 04:35:44.477029       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I1013 04:35:44.487851       1 server.go:175] "Starting Kubernetes Scheduler" version="v1.34.0"
I1013 04:35:44.487863       1 server.go:177] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1013 04:35:44.489064       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1013 04:35:44.489091       1 shared_informer.go:349] "Waiting for caches to sync" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1013 04:35:44.489223       1 secure_serving.go:211] Serving securely on 127.0.0.1:10259
I1013 04:35:44.489257       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
E1013 04:35:44.489812       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ResourceSlice: resourceslices.resource.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"resourceslices\" in API group \"resource.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ResourceSlice"
E1013 04:35:44.489986       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_arm64.s:1223" type="*v1.ConfigMap"
E1013 04:35:44.490995       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E1013 04:35:44.491036       1 reflector.go:205] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E1013 04:35:44.491054       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E1013 04:35:44.491072       1 reflector.go:205] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E1013 04:35:44.491085       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E1013 04:35:44.491146       1 reflector.go:205] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E1013 04:35:44.491752       1 reflector.go:205] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E1013 04:35:44.491856       1 reflector.go:205] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E1013 04:35:44.491902       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ResourceClaim: resourceclaims.resource.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"resourceclaims\" in API group \"resource.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ResourceClaim"
E1013 04:35:44.492047       1 reflector.go:205] "Failed to watch" err="failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIDriver"
E1013 04:35:44.492273       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E1013 04:35:44.492342       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E1013 04:35:44.492523       1 reflector.go:205] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E1013 04:35:44.492566       1 reflector.go:205] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E1013 04:35:44.492651       1 reflector.go:205] "Failed to watch" err="failed to list *v1.DeviceClass: deviceclasses.resource.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"deviceclasses\" in API group \"resource.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.DeviceClass"
E1013 04:35:44.492689       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E1013 04:35:44.492750       1 reflector.go:205] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E1013 04:35:45.308362       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E1013 04:35:45.336605       1 reflector.go:205] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E1013 04:35:45.382896       1 reflector.go:205] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E1013 04:35:45.439368       1 reflector.go:205] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E1013 04:35:45.473143       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E1013 04:35:45.489894       1 reflector.go:205] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E1013 04:35:45.512675       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E1013 04:35:45.570735       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E1013 04:35:45.578562       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E1013 04:35:45.578573       1 reflector.go:205] "Failed to watch" err="failed to list *v1.ResourceSlice: resourceslices.resource.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"resourceslices\" in API group \"resource.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ResourceSlice"
E1013 04:35:45.580638       1 reflector.go:205] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
I1013 04:35:46.090434       1 shared_informer.go:356] "Caches are synced" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1013 04:35:48.698654       1 leaderelection.go:257] attempting to acquire leader lease kube-system/kube-scheduler...
I1013 04:35:48.705147       1 leaderelection.go:271] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-lab-cluster-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": [
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2effc4ba144",
                "namespace": "default",
                "uid": "b4521a5a-6293-4c13-9b96-e68c7481fff9",
                "resourceVersion": "67",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:41Z",
            "lastTimestamp": "2025-10-13T04:35:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2effcae4dd8",
                "namespace": "default",
                "uid": "4dbf131e-9f1a-48cd-ba29-cf3ac592a47d",
                "resourceVersion": "91",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:41Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2effcae680d",
                "namespace": "default",
                "uid": "e2cc2b5b-c7fe-40f2-8757-5ff284466462",
                "resourceVersion": "92",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:41Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2effcae7083",
                "namespace": "default",
                "uid": "8c5eb912-34b3-4c79-a3d0-1b47a88e5afe",
                "resourceVersion": "90",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:41Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f00211dc06",
                "namespace": "default",
                "uid": "b99f825d-b572-4d5e-b92b-408283033bc2",
                "resourceVersion": "75",
                "creationTimestamp": "2025-10-13T04:35:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:42Z",
            "lastTimestamp": "2025-10-13T04:35:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f102744b12",
                "namespace": "default",
                "uid": "0c32fcf5-245e-4db3-aafa-14970e44e85d",
                "resourceVersion": "262",
                "creationTimestamp": "2025-10-13T04:35:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:46Z",
            "lastTimestamp": "2025-10-13T04:35:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f104e08129",
                "namespace": "default",
                "uid": "76a54344-a5ee-430b-a91e-75c623fd96de",
                "resourceVersion": "265",
                "creationTimestamp": "2025-10-13T04:35:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:46Z",
            "lastTimestamp": "2025-10-13T04:35:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f10ad6339c",
                "namespace": "default",
                "uid": "849560e9-2d42-45c6-ab3d-6c304eca95af",
                "resourceVersion": "269",
                "creationTimestamp": "2025-10-13T04:35:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:46Z",
            "lastTimestamp": "2025-10-13T04:35:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f10ad64942",
                "namespace": "default",
                "uid": "bb305464-9a02-4f3a-915a-00f950c002c6",
                "resourceVersion": "270",
                "creationTimestamp": "2025-10-13T04:35:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:46Z",
            "lastTimestamp": "2025-10-13T04:35:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f10ad6554d",
                "namespace": "default",
                "uid": "1eede8dd-6927-4bd2-b3e4-b9ff315417ec",
                "resourceVersion": "271",
                "creationTimestamp": "2025-10-13T04:35:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-13T04:35:46Z",
            "lastTimestamp": "2025-10-13T04:35:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f2884babdf",
                "namespace": "default",
                "uid": "7398f956-129d-488b-bec2-faa08e1033d7",
                "resourceVersion": "350",
                "creationTimestamp": "2025-10-13T04:35:52Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "a90b3302-4cb8-4843-99b0-81124a0c10a6",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node lab-cluster-control-plane event: Registered Node lab-cluster-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2025-10-13T04:35:52Z",
            "lastTimestamp": "2025-10-13T04:35:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186df2f2fa2f9e3d",
                "namespace": "default",
                "uid": "726ea2bf-ad51-4741-b0b1-a9cdf81d79d5",
                "resourceVersion": "425",
                "creationTimestamp": "2025-10-13T04:35:54Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2025-10-13T04:35:54.765163Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186df2f3d30e91a5",
                "namespace": "default",
                "uid": "c954ba1f-fa50-4f08-b7c8-b7582eb741a2",
                "resourceVersion": "452",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-worker status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186df2f3d30e9fa4",
                "namespace": "default",
                "uid": "d18b8c66-75d7-4bd9-88e9-766ed1859e87",
                "resourceVersion": "459",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-worker status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186df2f3d30ea81b",
                "namespace": "default",
                "uid": "bba50c3d-395f-4a82-b209-0e1de3cbcce0",
                "resourceVersion": "466",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-worker status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186df2f3d8e064d4",
                "namespace": "default",
                "uid": "f9e0f9d1-a2c8-4c80-a104-5c942c655d6a",
                "resourceVersion": "450",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186df2f3df6f5f83",
                "namespace": "default",
                "uid": "4c166f3a-1fc1-45f3-89dd-db066c270c8a",
                "resourceVersion": "471",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker2"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186df2f3dfbc32ab",
                "namespace": "default",
                "uid": "287c08b0-47f5-45fd-bb80-31417ff1d369",
                "resourceVersion": "481",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker2"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186df2f3dfbc4057",
                "namespace": "default",
                "uid": "f9656c2a-32c5-4dbd-8532-850962602485",
                "resourceVersion": "483",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker2"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186df2f3dfbc47aa",
                "namespace": "default",
                "uid": "f77be184-8d26-421b-a983-bd72704e67e2",
                "resourceVersion": "492",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker2"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186df2f3e468f981",
                "namespace": "default",
                "uid": "88e9d0f0-867c-4bc8-ae8f-b1465bd98f0b",
                "resourceVersion": "478",
                "creationTimestamp": "2025-10-13T04:35:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-13T04:35:58Z",
            "lastTimestamp": "2025-10-13T04:35:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "lab-cluster-worker2"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "1aca923f-e27a-42a5-aec3-d0d79cb093da",
                "resourceVersion": "239",
                "creationTimestamp": "2025-10-13T04:35:45Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": null
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": null
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "498"
    },
    "items": null
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "499"
    },
    "items": null
}
